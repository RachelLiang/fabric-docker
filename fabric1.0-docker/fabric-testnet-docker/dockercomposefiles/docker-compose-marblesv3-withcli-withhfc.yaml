version: '2'

services:
  ca0:
    image: blockchain101/fabric-ca:1.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/peerOrg1-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/d8a5b3cac1b821f6e4b487ceaf1fd239cdcfc310894150908b90f05e9179556a_sk -b admin:adminpw' -d
    volumes:
      - ./channel/crypto-config/peerOrganizations/peerOrg1/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca0

  ca1:
    image: blockchain101/fabric-ca:1.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/peerOrg2-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/96bdb57f4efbdcf201a269899eb47e2a73fbb728ae14d47d0d5afb75ddea71de_sk -b admin:adminpw' -d
    volumes:
      - ./channel/crypto-config/peerOrganizations/peerOrg2/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca1

  orderer0:
    container_name: orderer0
    image: blockchain101/fabric-orderer:1.0
    environment:
      - GRPC_TRACE=all
      - GRPC_VERBOSITY=debug
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/orderer-TwoOrgs.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer
      - ORDERER_GENERAL_TLS_ENABLED=false
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/tls/orderer/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/tls/orderer/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/tls/orderer/ca-cert.pem, /etc/hyperledger/tls/peers/peer0/ca-cert.pem, /etc/hyperledger/tls/peers/peer2/ca-cert.pem]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./channel:/etc/hyperledger/configtx
        - ./channel/crypto-config/ordererOrganizations/ordererOrg1/orderers/ordererOrg1orderer1/:/etc/hyperledger/msp/orderer
        - ./tls/orderer:/etc/hyperledger/tls/orderer
        - ./tls/peers:/etc/hyperledger/tls/peers

  peer0:
    container_name: peer0
    image: blockchain101/fabric-peer:1.0
    environment:
      - CORE_LOGGING_LEVEL=INFO
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_ADDRESS=peer0:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0:7051
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/key.pem
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/ca-cert.pem
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dockercomposefiles_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./channel/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/:/etc/hyperledger/msp/peer
        - ./tls/peers/peer0:/etc/hyperledger/tls
    depends_on:
      - orderer0

  peer1:
    container_name: peer1
    image: blockchain101/fabric-peer:1.0
    environment:
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_ADDRESS=peer1:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1:7051
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/key.pem
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/ca-cert.pem
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dockercomposefiles_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 7056:7051
      - 7058:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./channel/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer2/:/etc/hyperledger/msp/peer
        - ./tls/peers/peer1:/etc/hyperledger/tls
    depends_on:
      - orderer0
      - peer0

  peer2:
    container_name: peer2
    image: blockchain101/fabric-peer:1.0
    environment:
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer2
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_ADDRESS=peer2:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2:7051
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/key.pem
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/ca-cert.pem
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dockercomposefiles_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./channel/crypto-config/peerOrganizations/peerOrg2/peers/peerOrg2Peer1/:/etc/hyperledger/msp/peer
        - ./tls/peers/peer2:/etc/hyperledger/tls
    depends_on:
      - orderer0

  peer3:
    container_name: peer3
    image: blockchain101/fabric-peer:1.0
    environment:
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer3
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_ADDRESS=peer3:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer3:7051
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/key.pem
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/ca-cert.pem
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dockercomposefiles_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 8056:7051
      - 8058:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./channel/crypto-config/peerOrganizations/peerOrg2/peers/peerOrg2Peer2/:/etc/hyperledger/msp/peer
        - ./tls/peers/peer3:/etc/hyperledger/tls
    depends_on:
      - orderer0
      - peer2

  #couchdb:
   # container_name: couchdb
   # image: hyperledger/fabric-couchdb
   # ports:
   #   - 5984:5984
   # environment:
   #   COUCHDB_USER: admin
   #   COUCHDB_PASSWORD: password
   #   DB_URL: http://localhost:5984/member_db

  cli:
    container_name: cli
    image: blockchain101/fabric-cli:1.0
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=INFO
      - CORE_NEXT=true
      - CORE_PEER_ID=cli
      - CORE_PEER_ENDORSER_ENABLED=true
      # - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer0:7050
      - CORE_PEER_ADDRESS=peer1:7051
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/signcerts/peerOrg1Peer1-cert.pem
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/keystore/5e67f35124df6a9124bf3659365b8476af4090f73c82c9b626efc15f12739d5d_sk
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/cacerts/peerOrg1-cert.pem
      # - CORE_PEER_TLS_SERVERHOSTOVERRIDE=peer0
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/peerOrg1/peers/peerOrg1Peer1
      - PRODUCTION_PATH=/var/hyperledger/production
    
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash -c './scripts/script-${CHANNEL_NAME}.sh ${CHANNEL_NAME}; sleep 1000000'
    #command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./channel/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel:/opt/gopath/src/github.com/hyperledger/fabric/channel
    depends_on:
      - orderer0
      - peer0
      - peer1
      - peer2
      - peer3


  hfc0:
    container_name: hfc0
    image: blockchain101/fabric-hfc:1.0
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - TNVM_DIR=/usr/local/lib/node/.tnvm
    command: /bin/bash -c '. $$TNVM_DIR/tnvm.sh; $$TNVM_DIR/bin/gulp marbles1;'
    volumes:
        - /var/run/:/host/var/run/
        - ./config:/dapps/marbles-3.0/config
    ports:
      - 3001:3001      
    depends_on:
      - ca0
      - orderer0
      - peer0
      
  hfc1:
    container_name: hfc1
    image: blockchain101/fabric-hfc:1.0
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - TNVM_DIR=/usr/local/lib/node/.tnvm      
    command: /bin/bash -c '. $$TNVM_DIR/tnvm.sh; $$TNVM_DIR/bin/gulp marbles2;'
    volumes:
        - /var/run/:/host/var/run/
        - ./config:/dapps/marbles-3.0/config    
    ports:
      - 3002:3002    
    depends_on:
      - ca1    
      - orderer0
      - peer2
